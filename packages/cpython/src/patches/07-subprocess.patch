--- native/Lib/subprocess.py	2022-08-05 07:45:18.000000000 -0700
+++ wasm/Lib/subprocess.py	2022-09-13 22:02:10.921551009 -0700
@@ -75,7 +75,7 @@
     _mswindows = True
 
 # wasm32-emscripten and wasm32-wasi do not support processes
-_can_fork_exec = sys.platform not in {"emscripten", "wasi"}
+_can_fork_exec = sys.platform not in {"emscripten"}
 
 if _mswindows:
     import _winapi
@@ -1824,9 +1824,23 @@
                         executable_list = (executable,)
                     else:
                         # This matches the behavior of os._execvpe().
-                        executable_list = tuple(
-                            os.path.join(os.fsencode(dir), executable)
-                            for dir in os.get_exec_path(env))
+                        # executable_list = tuple(
+                        #     os.path.join(os.fsencode(dir), executable)
+                        #     for dir in os.get_exec_path(env))
+
+                        # We instead find the first file that exists.  For python-wasm
+                        # we *can't* in general run execv a bunch of times after forking,
+                        # since it involves calls to Javascript, etc., and that will
+                        # not work.  We get one shot.
+                        executable_list = tuple([])
+                        for dir in os.get_exec_path(env):
+                            path = os.path.join(os.fsencode(dir), executable)
+                            if os.path.exists(path) and os.path.isfile(path):
+                                executable_list = (path,)
+                                break
+
+
+
                     fds_to_keep = set(pass_fds)
                     fds_to_keep.add(errpipe_write)
                     self.pid = _fork_exec(
--- native/Modules/_posixsubprocess.c	2022-08-05 07:45:18.000000000 -0700
+++ wasm/Modules/_posixsubprocess.c	2022-09-13 22:04:14.287085010 -0700
@@ -652,9 +652,18 @@
     /* close FDs after executing preexec_fn, which might open FDs */
     if (close_fds) {
         /* TODO HP-UX could use pstat_getproc() if anyone cares about it. */
-        _close_open_fds(3, py_fds_to_keep);
+
+        // WE just don't do this in python-wasm, since it involves hundreds
+        // of calls back to Javascript and will randomly crash because we already forked.
+        // It's not an option.
+
+        // _close_open_fds(3, py_fds_to_keep);
     }
 
+    // At this point we can't reliably report exec* errors back due to being
+    // on python-wasm.
+    POSIX_CALL(close(errpipe_write));
+
     /* This loop matches the Lib/os.py _execvpe()'s PATH search when */
     /* given the executable_list generated by Lib/subprocess.py.     */
     saved_errno = 0;
