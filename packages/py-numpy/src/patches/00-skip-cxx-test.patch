--- native/numpy/core/setup.py	2022-08-13 11:30:12.000000000 -0700
+++ wasm/numpy/core/setup.py	2022-09-09 15:18:02.000000000 -0700
@@ -195,7 +195,7 @@
     check_funcs(OPTIONAL_STDFUNCS)
     check_funcs(OPTIONAL_FILE_FUNCS, headers=["feature_detection_stdio.h"])
     check_funcs(OPTIONAL_MISC_FUNCS, headers=["feature_detection_misc.h"])
-    
+
 
 
     for h in OPTIONAL_HEADERS:
@@ -723,6 +723,8 @@
         # but we cannot use add_installed_pkg_config here either, so we only
         # update the substitution dictionary during npymath build
         config_cmd = config.get_config_cmd()
+        print('get_mathlib_info', args)
+        print('config_cmd', config_cmd)
         # Check that the toolchain works, to fail early if it doesn't
         # (avoid late errors with MATHLIB which are confusing if the
         # compiler does not work).
@@ -739,6 +741,10 @@
         ):
             is_cpp = lang == 'c++'
             if is_cpp:
+                # For WASM we skip this C++ test, since I don't yet have C++ fPIC code working.
+                # I don't think there is any numpy C++ code, right?
+                continue
+            if is_cpp:
                 # this a workaround to get rid of invalid c++ flags
                 # without doing big changes to config.
                 # c tested first, compiler should be here
@@ -751,6 +757,7 @@
                     config_cmd.compiler.compiler_so.extend(NPY_CXX_FLAGS)
 
             st = config_cmd.try_link(test_code, lang=lang)
+            print(lang, test_code, note)
             if not st:
                 # rerun the failing command in verbose mode
                 config_cmd.compiler.verbose = True
